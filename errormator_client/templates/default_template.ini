[errormator]

#
# BASIC CONFIG
#

# errormator enabled
errormator = true


errormator.server_url = https://api.errormator.com
errormator.api_key = YOUR_API_KEY

#
# TWEAK AMOUNT OF INFO SENT HERE
#

# enables 404 error logging (default False)
errormator.report_404 = false

# time in seconds after request is considered being slow (default 1)
errormator.slow_request_time = 1

# record slow requests in application
# (needs to be enabled for slow datastore recording and time tracking)
errormator.slow_requests = true

# enable hooking to application loggers
# errormator.logging = true

# minimum log level for log capture
# errormator.logging.level = WARNING

# send logs only from erroneous/slow requests
# (saves API quota for intensive logging)
# errormator.logging_on_error = false

# list of additonal keywords that should be grabbed from environ object 
# can be string with comma separated list of words in lowercase
# (by default client will always send following info:
# 'REMOTE_USER', 'REMOTE_ADDR', 'SERVER_NAME', 'CONTENT_TYPE' + all keys that 
# start with HTTP* this list be extended with additional keywords here
errormator.environ_keys_whitelist = 


# list of keywords that should be blanked from request object 
# can be string with comma separated list of words in lowercase
# (by default client will always blank keys that contain following words 
# 'password', 'passwd', 'pwd', 'auth_tkt', 'secret', 'csrf'
# this list be extended with additional keywords set here
errormator.request_keys_blacklist =


# list of namespaces that should be ignores when gathering log entries
# can be string with comma separated list of namespaces
# (by default the client ignores own entries: errormator_client.client)
errormator.log_namespace_blacklist =  


#
# FINE GRAIN SLOW EXECUTION INFORMATION PER LIB
#
# If for some reason you want to disable timing of specific library 
# just set the time value to false.
#

errormator.timing.urllib = 3
errormator.timing.urllib2 = 3
errormator.timing.urllib3 = 3
errormator.timing.requests = 3
errormator.timing.httplib = 3
errormator.timing.pysolr = 0.3
errormator.timing.pymongo = 0.3
errormator.timing.mako = 0.15
errormator.timing.jinja2 = 0.15
errormator.timing.django_templates = 0.15
errormator.timing.dbapi2_pg8000 = 0.3
errormator.timing.dbapi2_psycopg2 = 0.3
errormator.timing.dbapi2_postgresql = 0.3
errormator.timing.dbapi2_MySQLdb = 0.3
errormator.timing.dbapi2_pymysql = 0.3
errormator.timing.dbapi2_oursql = 0.3
errormator.timing.dbapi2_sqlite3 = 0.3
errormator.timing.dbapi2_pyodbc = 0.3
errormator.timing.dbapi2_cx_Oracle = 0.3
errormator.timing.dbapi2_kinterbasdb = 0.3

#
# YOU SHOULD NOT NEED TO TWEAK THIS
#

# leave server_name empty for auto discovery
# errormator.server_name =

# connection timeout when communicating with API
# errormator.timeout = 10

# reraise exceptions when wsgi catches exception
# errormator.reraise_exceptions = true

# enables 500 error logging
errormator.report_errors = true  

# how often send data to mothership Errormator (default 5s)
errormator.buffer_flush_interval = 5

# send all data after request is finished - handy for crons or other voliatile applications
errormator.force_send = false

# custom filter callable to override sensitive data filtering
# errormator.filter_callable = foo.bar.baz:callable_name

            