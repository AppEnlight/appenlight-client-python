[appenlight]

#
# BASIC CONFIG
#

# appenlight enabled
appenlight = true

# Your PRIVATE key goes here
appenlight.api_key = YOUR_API_KEY

#
# TWEAK AMOUNT OF INFO SENT HERE
#

# enables frame locals sending on error (default False)
appenlight.report_local_vars = false

# enables 404 error logging (default False)
appenlight.report_404 = false

# time in seconds after request is considered being slow (default 1)
appenlight.slow_request_time = 1

# record slow requests in application
# (needs to be enabled for slow datastore recording and time tracking)
appenlight.slow_requests = true

# enable hooking to application loggers
# appenlight.logging = true

# minimum log level for log capture
# appenlight.logging.level = WARNING

# send logs only from erroneous/slow requests
# (saves API quota for intensive logging)
# appenlight.logging_on_error = false

# list of additonal keywords that should be grabbed from environ object 
# can be string with comma separated list of words in lowercase
# (by default client will always send following info:
# 'REMOTE_USER', 'REMOTE_ADDR', 'SERVER_NAME', 'CONTENT_TYPE' + all keys that 
# start with HTTP* this list be extended with additional keywords here
appenlight.environ_keys_whitelist =


# list of keywords that should be blanked from request object 
# can be string with comma separated list of words in lowercase
# (by default client will always blank keys that contain following words 
# 'password', 'passwd', 'pwd', 'auth_tkt', 'secret', 'csrf', 'session', 'pass', 
# 'config', 'settings', 'environ'
# this list be extended with additional keywords set here
appenlight.request_keys_blacklist =


# list of namespaces that should be ignores when gathering log entries
# can be string with comma separated list of namespaces
# (by default the client ignores own entries: appenlight_client.client)
appenlight.log_namespace_blacklist =


#
# FINE GRAIN SLOW EXECUTION INFORMATION PER LIB
#
# If for some reason you want to disable timing of specific library 
# just set the time value to false.
#

appenlight.timing.urllib = 3
appenlight.timing.urllib2 = 3
appenlight.timing.urllib3 = 3
appenlight.timing.requests = 3
appenlight.timing.httplib = 3
appenlight.timing.pysolr = 0.1
appenlight.timing.pymongo = 0.1
appenlight.timing.redispy = 0.1
appenlight.timing.memcache = 0.1
# appenlight.timing.pylibmc = 0.1
appenlight.timing.mako = 0.15
appenlight.timing.jinja2 = 0.15
appenlight.timing.django_templates = 0.15
appenlight.timing.dbapi2_pg8000 = 0.1
appenlight.timing.dbapi2_psycopg2 = 0.1
appenlight.timing.dbapi2_postgresql = 0.1
appenlight.timing.dbapi2_MySQLdb = 0.1
appenlight.timing.dbapi2_pymysql = 0.1
appenlight.timing.dbapi2_oursql = 0.1
appenlight.timing.dbapi2_sqlite3 = 0.1
appenlight.timing.dbapi2_pyodbc = 0.1
appenlight.timing.dbapi2_cx_Oracle = 0.1
appenlight.timing.dbapi2_kinterbasdb = 0.1

# disable optional instrumenting hooks

# appenlight.hooks_blacklist = hook_pylons, other_hook

#
# YOU SHOULD NOT NEED TO TWEAK THIS
#

# leave server_name empty for auto discovery
# appenlight.server_name =

# connection timeout when communicating with API
# appenlight.timeout = 10

# reraise exceptions when wsgi catches exception
# appenlight.reraise_exceptions = true

# enables 500 error logging
appenlight.report_errors = true

# how often send data to mothership Appenlight (default 5s)
appenlight.buffer_flush_interval = 5

# send all data after request is finished - handy for crons or other voliatile applications
appenlight.force_send = false

# custom filter callable to override sensitive data filtering
# appenlight.filter_callable = foo.bar.baz:callable_name

# transport config
appenlight.transport = appenlight_client.transports.http:HTTPTransport
appenlight.transport_config = https://api.appenlight.com?threaded=1&timeout=5